{"version":3,"sources":["components/FileUpload.tsx","components/Title.tsx","helpers/AnalyticsParser.ts","components/charts/TimeLineChart.tsx","components/charts/Trend.tsx","components/Analytic/index.tsx","pages/Layout.tsx","pages/Privacy.tsx","pages/Help.tsx","pages/Contact.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FileUpload","className","onUpload","file","onNewExport","onDrop","useCallback","acceptedFiles","a","newFile","useDropzone","getRootProps","getInputProps","isDragActive","size","name","onClick","e","classNames","type","color","height","width","TitleLink","children","href","location","useLocation","to","pathname","Title","src","alt","style","direction","parseCSVFile","Promise","resolve","reject","Papa","parse","complete","result","parseAnalytics","analytics","fileData","fields","splice","shift","pop","stats","project","id","pointSum","downloadSum","uniqueDownloadSum","curseDownloadSum","twitchDownloadSum","forEach","record","statsLine","date","points","parseFloat","historicalDownload","parseInt","dailyDownload","dailyUniqueDownload","dailyTwitchAppDownload","dailyCurseForgeDownload","push","pointDailyAverage","length","summary","cursePercentage","twitchPercentage","growth","downloadDailyAverage","uniqueness","DefaultValueRender","value","toLocaleString","TimeLineChart","data","ValueRenderer","axisNames","x","y","margin","top","right","bottom","left","xScale","useUTC","format","precision","yScale","min","max","tooltip","point","toLocaleDateString","enablePoints","enableGridX","axisBottom","getFullYear","getMonth","axisLeft","orient","tickSize","tickPadding","tickRotation","legendOffset","legendPosition","colors","pointColor","theme","pointBorderColor","from","useMesh","Trend","title","field","formattedFileName","map","entry","Analytic","toFixed","undefined","maximumFractionDigits","Layout","Privacy","Help","target","rel","Contact","App","useEffect","handleUpload","setLoading","setFile","res","setData","useState","loading","path","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9ec4906f.chunk.js","sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport classNames from \"classnames\";\r\nimport { DocumentReport, PlusCircle, Trash } from \"heroicons-react\";\r\n\r\ninterface Props {\r\n  className?: string;\r\n  onUpload?: Function;\r\n  file?: File;\r\n  onNewExport: Function;\r\n}\r\n\r\nexport default function FileUpload({\r\n  className,\r\n  onUpload,\r\n  file,\r\n  onNewExport,\r\n}: Props) {\r\n  const onDrop = useCallback(\r\n    async (acceptedFiles) => {\r\n      if (!acceptedFiles[0]) {\r\n        return;\r\n      }\r\n      const newFile = acceptedFiles[0];\r\n\r\n      onUpload && onUpload(newFile);\r\n    },\r\n    [onUpload]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  if (file) {\r\n    return (\r\n      <div className=\"flex w-full\">\r\n        <div className=\"flex items-center flex-grow\">\r\n          <DocumentReport size={24} />\r\n          {file.name}\r\n        </div>\r\n        <button\r\n          className=\"flex items-center p-2 underline hover:text-orange-600 transition duration-500 ease-in-out\"\r\n          onClick={(e) => onNewExport()}\r\n        >\r\n          New export <PlusCircle size={24} className=\"ml-2 \" />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div {...getRootProps()} className={classNames(className, \"drop-zone\")}>\r\n      <input {...getInputProps()} />\r\n      {isDragActive ? (\r\n        <Loader type=\"Rings\" color=\"#DD5F18\" height={200} width={200} />\r\n      ) : (\r\n        <div className=\"text-xl text-center my-2\">\r\n          Drop export here or\r\n          <br />\r\n          <span className=\"underline cursor-pointer\">choose a file</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction TitleLink({\r\n  children,\r\n  href,\r\n}: {\r\n  children: React.ReactNode;\r\n  href: string;\r\n}) {\r\n  const location = useLocation();\r\n  return (\r\n    <div className=\"text-xl font-brand\">\r\n      <Link\r\n        to={href}\r\n        className={classNames(\r\n          \"no-underline\",\r\n          location.pathname === href ? \"bracket-active\" : \"bracket\"\r\n        )}\r\n      >\r\n        {children}\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Title() {\r\n  return (\r\n    <div className=\"flex items-center flex-wrap\">\r\n      <div className=\"flex-grow\">\r\n        <Link to=\"/\" className=\"no-underline flex items-center flex-grow\">\r\n          <img\r\n            src=\"logo-bg.png\"\r\n            width=\"100\"\r\n            className=\"rounded-full mr-4 hidden md:block\"\r\n            alt=\"CurseForge Analytics logo\"\r\n          />\r\n          <h1 className=\"font-brand flex flex-wrap\">\r\n            CurseForge\r\n            <div className=\"font-bold slide-right ml-2\">\r\n              <p>Analytics</p>\r\n            </div>\r\n          </h1>\r\n        </Link>\r\n      </div>\r\n      <div\r\n        className=\"w-full lg:w-auto lg:text-right mt-2 flex flex-col\"\r\n        style={{ direction: \"rtl\" }}\r\n      >\r\n        <TitleLink href=\"/privacy\">Privacy</TitleLink>\r\n        <TitleLink href=\"/help\">Help</TitleLink>\r\n        <TitleLink href=\"/contact\">Contact</TitleLink>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Papa from \"papaparse\";\r\n\r\nexport function parseCSVFile(file: File) {\r\n  return new Promise<Papa.ParseResult<unknown>>((resolve, reject) => {\r\n    Papa.parse(file, {\r\n      complete: (result) => {\r\n        resolve(result);\r\n      },\r\n    });\r\n  });\r\n}\r\n\r\nexport interface StatsLine {\r\n  date: string;\r\n  points: number;\r\n  historicalDownload: number;\r\n  dailyDownload: number;\r\n  dailyUniqueDownload: number;\r\n  dailyTwitchAppDownload: number;\r\n  dailyCurseForgeDownload: number;\r\n}\r\n\r\nexport interface Analytics {\r\n  project: {\r\n    name: string;\r\n    id: string;\r\n  };\r\n  fields: string[];\r\n  stats: StatsLine[];\r\n  summary: {\r\n    curseDownloadSum: number;\r\n    twitchDownloadSum: number;\r\n    pointSum: number;\r\n    downloadSum: number;\r\n    uniqueDownloadSum: number;\r\n    cursePercentage: number;\r\n    twitchPercentage: number;\r\n    pointDailyAverage: number;\r\n    growth: number;\r\n    downloadDailyAverage: number;\r\n    uniqueness: number;\r\n  };\r\n}\r\n\r\nexport default function parseAnalytics(analytics: string[][]): Analytics {\r\n  const fileData = [...analytics];\r\n  const fields = fileData[0];\r\n  fields.splice(1, 2);\r\n  fileData.shift(); // Don't want the headers\r\n  fileData.pop(); // Remove mystery empty entry\r\n\r\n  const stats: StatsLine[] = [];\r\n  const project = {\r\n    name: fileData[1][2],\r\n    id: fileData[1][1],\r\n  };\r\n\r\n  let pointSum = 0;\r\n  let downloadSum = 0;\r\n  let uniqueDownloadSum = 0;\r\n  let curseDownloadSum = 0;\r\n  let twitchDownloadSum = 0;\r\n\r\n  fileData.forEach((record) => {\r\n    const statsLine = {\r\n      date: record[0],\r\n      points: parseFloat(record[3]),\r\n      historicalDownload: parseInt(record[4]),\r\n      dailyDownload: parseInt(record[5]),\r\n      dailyUniqueDownload: parseInt(record[6]),\r\n      dailyTwitchAppDownload: parseInt(record[7]),\r\n      dailyCurseForgeDownload: parseInt(record[8]),\r\n    };\r\n\r\n    pointSum += statsLine.points;\r\n    downloadSum += statsLine.dailyDownload;\r\n    uniqueDownloadSum += statsLine.dailyUniqueDownload;\r\n    curseDownloadSum += statsLine.dailyCurseForgeDownload;\r\n    twitchDownloadSum += statsLine.dailyTwitchAppDownload;\r\n\r\n    stats.push(statsLine);\r\n  });\r\n\r\n  const pointDailyAverage = pointSum / stats.length;\r\n\r\n  const summary = {\r\n    curseDownloadSum,\r\n    twitchDownloadSum,\r\n    pointSum,\r\n    downloadSum,\r\n    uniqueDownloadSum,\r\n    cursePercentage: (curseDownloadSum / downloadSum) * 100,\r\n    twitchPercentage: (twitchDownloadSum / downloadSum) * 100,\r\n    pointDailyAverage,\r\n    growth: (downloadSum / stats[0].historicalDownload) * 100,\r\n    downloadDailyAverage: downloadSum / stats.length,\r\n    uniqueness: (uniqueDownloadSum / downloadSum) * 100,\r\n  };\r\n\r\n  return {\r\n    project,\r\n    fields,\r\n    stats,\r\n    summary,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { ResponsiveLine, Serie } from \"@nivo/line\";\r\n\r\ninterface Props {\r\n  data: Serie[];\r\n  height?: number;\r\n  color?: string;\r\n  axisNames?: { x?: string; y?: string };\r\n  ValueRenderer?: React.ComponentType<ValueRendererProps>;\r\n}\r\n\r\nexport interface ValueRendererProps {\r\n  value: number | string | Date;\r\n}\r\n\r\nfunction DefaultValueRender({ value }: { value: unknown }) {\r\n  if (typeof value === \"number\") {\r\n    return <>{(value as number).toLocaleString()}</>;\r\n  }\r\n  return <>{value}</>;\r\n}\r\n\r\nexport default function TimeLineChart({\r\n  data,\r\n  height = 400,\r\n  color = \"#DD5F18\",\r\n  ValueRenderer = DefaultValueRender,\r\n  axisNames = { x: \"x\", y: \"y\" },\r\n}: Props) {\r\n  return (\r\n    <div style={{ height: height }}>\r\n      <ResponsiveLine\r\n        data={data}\r\n        margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\r\n        xScale={{\r\n          type: \"time\",\r\n          useUTC: false,\r\n          format: \"%Y-%m-%d\",\r\n          precision: \"day\",\r\n        }}\r\n        yScale={{\r\n          type: \"linear\",\r\n          min: \"auto\",\r\n          max: \"auto\",\r\n        }}\r\n        tooltip={({ point }) => {\r\n          const date = point.data.x as Date;\r\n          return (\r\n            <div className=\"bg-gray-100 border border-orange-600 rounded-lg bg-opacity-75 px-5 py-2\">\r\n              <div>\r\n                Date:{\" \"}\r\n                <span className=\"font-bold\">{`${date.toLocaleDateString()}`}</span>\r\n              </div>\r\n              <div>\r\n                {axisNames.y}:{\" \"}\r\n                <span className=\"font-bold\">\r\n                  <ValueRenderer value={point.data.y} />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n        enablePoints={false}\r\n        enableGridX={false}\r\n        axisBottom={{\r\n          format: (value) => {\r\n            const date = value as Date;\r\n            return `${date.getFullYear()}/${date.getMonth() + 1}`;\r\n          },\r\n        }}\r\n        axisLeft={{\r\n          orient: \"left\",\r\n          tickSize: 5,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legendOffset: -40,\r\n          legendPosition: \"middle\",\r\n        }}\r\n        colors={color}\r\n        pointColor={{ theme: \"background\" }}\r\n        pointBorderColor={{ from: \"serieColor\" }}\r\n        useMesh={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { Serie } from \"@nivo/line\";\r\nimport React from \"react\";\r\nimport { StatsLine } from \"../../helpers/AnalyticsParser\";\r\nimport TimeLineChart, { ValueRendererProps } from \"./TimeLineChart\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  stats: StatsLine[];\r\n  field: keyof StatsLine;\r\n  color?: string;\r\n  formattedFileName?: string;\r\n  className?: string;\r\n  ValueRenderer?: React.ComponentType<ValueRendererProps>;\r\n}\r\n\r\nexport default function Trend({\r\n  title,\r\n  stats,\r\n  field,\r\n  formattedFileName,\r\n  className,\r\n  color = \"#DD5F18\",\r\n  ValueRenderer,\r\n}: Props) {\r\n  const data = [\r\n    {\r\n      id: title,\r\n      color,\r\n      data: stats.map((entry) => ({\r\n        x: entry.date,\r\n        y: entry[field],\r\n      })),\r\n    },\r\n  ] as Serie[];\r\n\r\n  return (\r\n    <div className={classNames(\"flex flex-col\", className)}>\r\n      <h3>{title}</h3>\r\n      <div className=\"h-full flex-grow\">\r\n        <TimeLineChart\r\n          data={data}\r\n          ValueRenderer={ValueRenderer}\r\n          color={color}\r\n          axisNames={{ y: formattedFileName }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Analytics } from \"../../helpers/AnalyticsParser\";\r\nimport Trend from \"../charts/Trend\";\r\n\r\ninterface Props {\r\n  analytics: Analytics;\r\n}\r\n\r\nexport default function Analytic({ analytics }: Props) {\r\n  const { stats, project, summary } = analytics;\r\n  return (\r\n    <div>\r\n      <div className=\"text-center\">\r\n        <h2>\r\n          <span className=\"font-semibold\">{project.name}</span>\r\n        </h2>\r\n        <div>\r\n          <span className=\"font-bold\">{stats[0].date}</span> to{\" \"}\r\n          <span className=\"font-bold\">{stats[stats.length - 1].date}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-5\">\r\n        <div className=\"text-center text-lg flex items-center justify-center lg:w-3/4 mx-auto flex-wrap\">\r\n          <div className=\"w-1/2 md:w-1/3 lg:w-1/5\">\r\n            <div className=\"font-bold text-2xl\">{stats.length} days</div>\r\n            Period\r\n          </div>\r\n\r\n          <div className=\"w-1/2 md:w-1/3 lg:w-1/5\">\r\n            <div className=\"font-bold text-2xl\">\r\n              {summary.growth.toFixed(0)}%\r\n            </div>\r\n            Download growth\r\n          </div>\r\n\r\n          <div className=\"w-1/2 md:w-1/3 lg:w-1/5\">\r\n            <div>\r\n              <div className=\"font-bold\">{summary.pointSum.toFixed(2)}</div>(\r\n              <span className=\"font-bold\">\r\n                ${(summary.pointSum * 0.05).toFixed(2)} USD\r\n              </span>\r\n              )\r\n            </div>\r\n            Points earned\r\n          </div>\r\n\r\n          <div className=\"w-1/2 md:w-1/3 lg:w-1/5\">\r\n            <div className=\"font-bold text-2xl\">\r\n              {summary.pointDailyAverage.toFixed(2)}\r\n            </div>\r\n            <div>\r\n              (\r\n              <span className=\"font-bold\">\r\n                ${(summary.pointDailyAverage * 0.05).toFixed(2)} USD\r\n              </span>\r\n              )\r\n            </div>\r\n            Daily points avg.\r\n          </div>\r\n\r\n          <div className=\"w-1/2 md:w-1/3 lg:w-1/5\">\r\n            <div className=\"font-bold text-2xl\">\r\n              {summary.downloadDailyAverage.toLocaleString(undefined, {\r\n                maximumFractionDigits: 0,\r\n              })}\r\n            </div>\r\n            Daily downloads avg.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Trend\r\n        stats={analytics.stats}\r\n        field=\"points\"\r\n        title=\"Daily points\"\r\n        formattedFileName=\"Points\"\r\n        className=\"mb-6\"\r\n        ValueRenderer={({ value }) => {\r\n          return (\r\n            <>\r\n              {value} (${`${(parseFloat(value as string) * 0.05).toFixed(2)}`}{\" \"}\r\n              USD)\r\n            </>\r\n          );\r\n        }}\r\n      />\r\n      <Trend\r\n        stats={analytics.stats}\r\n        field=\"dailyDownload\"\r\n        title=\"Daily downloads\"\r\n        formattedFileName=\"Downloads\"\r\n        className=\"mb-6\"\r\n      />\r\n      <Trend\r\n        stats={analytics.stats}\r\n        field=\"historicalDownload\"\r\n        title=\"Downloads over time\"\r\n        formattedFileName=\"Total Downloads\"\r\n        className=\"mb-6\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ArrowLeft } from \"heroicons-react\";\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport default function Layout({ children }: Props) {\r\n  return (\r\n    <div className=\"lg:w-2/3 mx-5 lg:mx-auto\">\r\n      <div className=\"mb-2 flex items-center\">\r\n        <ArrowLeft size={16} />\r\n        <Link to=\"/\" className=\"no-underline bracket\">\r\n          Home\r\n        </Link>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"./Layout\";\r\n\r\nexport default function Privacy() {\r\n  return (\r\n    <Layout>\r\n      <h2 className=\"mb-3\">Privacy</h2>\r\n      <div className=\"mb-3\">\r\n        <h3 className=\"mb-3\">Data</h3>\r\n        <div className=\"mb-3\">\r\n          <h4 className=\"mb-1\">Usage</h4>\r\n          <p>\r\n            The data uploaded to this app is only used to generate statistics\r\n            and display them.\r\n          </p>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <h4>Collection</h4>\r\n          <p>\r\n            No data is collected by the application. Export data, raw and\r\n            processed is never sent to any remote server or parties.\r\n          </p>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <h4>Sharing</h4>\r\n          <p>No data is ever shared with any third party.</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <h3 className=\"mb-3\">Source Code</h3>\r\n        <p>\r\n          You can view the source code of this app on{\" \"}\r\n          <a href=\"https://github.com/antoinegag/curseforge-analytics-viewer\">\r\n            Github\r\n          </a>\r\n        </p>\r\n      </div>\r\n\r\n      <div>\r\n        <p>This privacy policy is subject to change at any time</p>\r\n        <p>\r\n          Last update: <span className=\"font-bold\">2020-09-27</span>\r\n        </p>\r\n        <Link to=\"/contact\">Contact</Link>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"./Layout\";\r\n\r\nexport default function Help() {\r\n  return (\r\n    <Layout>\r\n      <h2 className=\"mb-3\">Help</h2>\r\n      <div className=\"mb-3\">\r\n        <h3 className=\"mb-2\">Getting your CurseForge export</h3>\r\n        <p>\r\n          Head to the{\" \"}\r\n          <a\r\n            href=\"https://minecraft.curseforge.com/dashboard/projects\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            CurseForge project dashboard\r\n          </a>{\" \"}\r\n          and click on the{\" \"}\r\n          <span className=\"bg-green-600 p-2 text-white rounded-lg\">\r\n            Download\r\n          </span>{\" \"}\r\n          button in the Analytics column.\r\n        </p>\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <h3 className=\"mb-2\">Something is wrong</h3>\r\n        <p>\r\n          For any issue please open an issue on{\" \"}\r\n          <a\r\n            href=\"https://github.com/antoinegag/curseforge-analytics-viewer/issues\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Github\r\n          </a>{\" \"}\r\n          or <Link to=\"/contact\">contact</Link> me\r\n        </p>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import { Mail } from \"heroicons-react\";\r\nimport React from \"react\";\r\nimport Layout from \"./Layout\";\r\n\r\nexport default function Contact() {\r\n  return (\r\n    <Layout>\r\n      <h2 className=\"mb-3\">Contact</h2>\r\n      <p className=\"mb-4\">\r\n        Don't hesitate to get in touch if you have any question or concern.\r\n      </p>\r\n      <div className=\"mb-3\">\r\n        <h4 className=\"mb-2 flex items-center font-sans\">\r\n          <Mail size={32} className=\"mr-2\" />\r\n          <a href=\"mailto:cfa@antoineg.dev\">cfa@antoineg.dev</a>\r\n        </h4>\r\n        <h4 className=\"mb-2 flex items-center font-sans\">\r\n          Twitter{\" \"}\r\n          <a\r\n            className=\"ml-2\"\r\n            href=\"https://twitter.com/antoineg_dev\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            @antoineg_dev\r\n          </a>{\" \"}\r\n        </h4>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport classNames from \"classnames\";\r\nimport \"./App.css\";\r\nimport FileUpload from \"./components/FileUpload\";\r\nimport Title from \"./components/Title\";\r\nimport parseAnalytics, {\r\n  Analytics,\r\n  parseCSVFile,\r\n} from \"./helpers/AnalyticsParser\";\r\nimport Analytic from \"./components/Analytic\";\r\nimport Privacy from \"./pages/Privacy\";\r\nimport Help from \"./pages/Help\";\r\nimport Contact from \"./pages/Contact\";\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      const lastImport = localStorage.getItem(\"lastImport\");\r\n      if (lastImport != null) {\r\n        setData(JSON.parse(lastImport) as Analytics);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleUpload = useCallback(async (file: File) => {\r\n    setLoading(true);\r\n    setFile(file);\r\n    const res = await parseCSVFile(file);\r\n    const analytics = parseAnalytics(res.data as string[][]);\r\n\r\n    setData(analytics);\r\n\r\n    if (false && process.env.NODE_ENV === \"development\") {\r\n      localStorage.setItem(\"lastImport\", JSON.stringify(analytics));\r\n    }\r\n\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [data, setData] = useState<Analytics>();\r\n  const [file, setFile] = useState<File>();\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"min-h-screen p-5 flex flex-col mx-2\">\r\n        <div className=\"lg:w-2/3 mx-5 lg:mx-auto\">\r\n          <Title />\r\n          <hr className=\"my-5\" />\r\n        </div>\r\n        <Switch>\r\n          <Route path=\"/privacy\">\r\n            <Privacy />\r\n          </Route>\r\n          <Route path=\"/help\">\r\n            <Help />\r\n          </Route>\r\n          <Route path=\"/contact\">\r\n            <Contact />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            {loading && <div>Loading</div>}\r\n            {!loading && (\r\n              <div\r\n                className={classNames(\r\n                  { \"flex-grow\": !data },\r\n                  \"lg:w-2/3 mb-5 lg:mx-auto flex\"\r\n                )}\r\n              >\r\n                <FileUpload\r\n                  className={classNames(\"w-full\", { \"flex-grow\": !data })}\r\n                  onUpload={handleUpload}\r\n                  file={file}\r\n                  onNewExport={() => {\r\n                    setData(undefined);\r\n                    setFile(undefined);\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n            {!loading && data && (\r\n              <div>\r\n                <Analytic analytics={data} />\r\n              </div>\r\n            )}\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/tailwind.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}