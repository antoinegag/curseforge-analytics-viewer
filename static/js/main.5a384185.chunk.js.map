{"version":3,"sources":["components/ImportCSV.js","utils/parseAnalytics.js","components/NavBar.js","components/stats/StatTable.js","components/stats/Plots.js","components/stats/Summary.js","App.js","serviceWorker.js","index.js"],"names":["ImportCSV","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","stats","fileReader","FileReader","handleFileChosen","bind","assertThisInitialized","handleFileRead","e","data","content","currentTarget","result","Papa","parse","complete","onData","file","onloadend","readAsText","_this2","react_default","a","createElement","className","Label","pointing","target","rel","href","Input","type","id","accept","onChange","files","React","Component","parseAnalytics","analytics","fileData","toConsumableArray","fields","splice","shift","pop","project","name","pointSum","downloadSum","uniqueDownloadSum","curseDownloadSum","twitchDownloadSum","forEach","record","statsLine","date","points","parseFloat","historicalDownload","parseInt","dailyDownload","dailyUniqueDownload","dailyTwitchAppDownload","dailyCurseForgeDownload","push","pointDailyAverage","length","summary","cursePercentage","twitchPercentage","estimatedRevenues","dailyEstimatedRevenues","growth","downloadDailyAverage","uniqueness","NavBar","Menu","style","minHeight","inverted","attached","Item","Icon","color","size","position","StatTable","_this$props","Table","Header","Row","map","field","HeaderCell","Body","stat","entries","entry","Cell","toLocaleString","Plots","title","days","values","react_plotly_default","useResizeHandler","x","y","mode","marker","layout","autosize","renderPlot","stackgroup","renderDailyPoints","renderDownloads","renderHistoricalDownload","Summary","_ref","as","Statistic","Group","Value","undefined","minimumFractionDigits","maximumFractionDigits","toFixed","Popup","trigger","App","handleAnalytics","setState","_this$state$analytics","range","start","end","marginLeft","marginRight","Content","Subheader","Divider","stats_Summary","stats_Plots","stats_StatTable","NavBar_NavBar","Container","textAlign","components_ImportCSV","renderAnalytics","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a384185.chunk.js","sourcesContent":["import React from \"react\";\nimport Papa from \"papaparse\";\nimport { Input, Label } from \"semantic-ui-react\";\n\nclass ImportCSV extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stats: null\n    }\n\n    this.fileReader = new FileReader();\n\n    this.handleFileChosen = this.handleFileChosen.bind(this);\n    this.handleFileRead = this.handleFileRead.bind(this);\n  }\n\n  handleFileRead(e) {\n    const content = e.currentTarget.result;\n\n    let data;\n    Papa.parse(content, {\n      complete: (result) => data = result\n    });\n    this.props.onData(data);\n  }\n\n  handleFileChosen(file) {\n    if (!file) return;\n    const fileReader = new FileReader();\n    fileReader.onloadend = this.handleFileRead;\n    fileReader.readAsText(file);\n  }\n\n  render() {\n    return (\n      <div className=\"mt-1\">\n        <Label pointing=\"below\">Find analytics data at <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"//minecraft.curseforge.com/dashboard/projects\">https://minecraft.curseforge.com/dashboard/projects</a></Label><br/>\n        <Input type='file'\n          id='file'\n          className='input-file'\n          accept='.csv'\n          onChange={e => this.handleFileChosen(e.target.files[0])}\n        />\n      </div>\n    );\n  }\n};\n\nexport default ImportCSV;","export default function parseAnalytics(analytics) {\n  const fileData = [...analytics];\n  const fields = fileData[0];\n  fields.splice(1, 2);\n  fileData.shift(); // Don't want the headers\n  fileData.pop(); // Remove mystery empty entry\n\n  const stats = [];\n  const project = {\n    name: fileData[1][2],\n    id: fileData[1][1],\n  }\n\n  let pointSum = 0;\n  let downloadSum = 0;\n  let uniqueDownloadSum = 0;\n  let curseDownloadSum = 0;\n  let twitchDownloadSum = 0;\n\n  fileData.forEach(record => {\n    const statsLine = {\n      date: record[0],\n      // id: record[1],\n      // name: record[2],\n      points: parseFloat(record[3]),\n      historicalDownload: parseInt(record[4]),\n      dailyDownload: parseInt(record[5]),\n      dailyUniqueDownload: parseInt(record[6]),\n      dailyTwitchAppDownload: parseInt(record[7]),\n      dailyCurseForgeDownload: parseInt(record[8]),\n    };\n\n    pointSum += statsLine.points;\n    downloadSum += statsLine.dailyDownload;\n    uniqueDownloadSum += statsLine.dailyUniqueDownload;\n    curseDownloadSum += statsLine.dailyCurseForgeDownload;\n    twitchDownloadSum += statsLine.dailyTwitchAppDownload;\n\n    stats.push(statsLine);\n  });\n\n  const pointDailyAverage = pointSum / stats.length;\n  const PTS_USD_RATE = 0.05;\n\n  const summary = {\n    curseDownloadSum,\n    twitchDownloadSum,\n    pointSum,\n    downloadSum,\n    uniqueDownloadSum,\n    cursePercentage: ((curseDownloadSum / downloadSum) * 100),\n    twitchPercentage: ((twitchDownloadSum / downloadSum) * 100),\n    pointDailyAverage,\n    estimatedRevenues: pointSum * PTS_USD_RATE,\n    dailyEstimatedRevenues: pointDailyAverage * PTS_USD_RATE,\n    growth: (downloadSum / stats[0].historicalDownload) * 100,\n    downloadDailyAverage: downloadSum / stats.length,\n    uniqueness: (uniqueDownloadSum / downloadSum) * 100,\n  }\n\n  return {\n    project,\n    fields,\n    stats,\n    summary,\n  }\n}","import React from 'react';\nimport {\n  Menu,\n  Icon,\n} from 'semantic-ui-react'\n\nexport default class NavBar extends React.Component {\n  render() {\n    return (\n      <Menu style={{ minHeight: \"50px\"}} inverted attached>\n        <Menu.Item><Icon color=\"orange\" name=\"pie graph\" size=\"big\" />CurseForge Analtytics Viewer</Menu.Item>\n        <Menu.Menu position='right'>\n          <Menu.Item href='//github.com/antoinegag/curseforge-analytics-viewer/blob/master/README.md#privacy'>\n            <Icon name=\"privacy\" size=\"large\"/> Privacy\n          </Menu.Item>\n          <Menu.Item href='//github.com/antoinegag/curseforge-analytics-viewer'>\n            <Icon name=\"github\" size=\"large\"/> Source Code\n          </Menu.Item>\n        </Menu.Menu>\n      </Menu>\n    );\n  }\n}","import React from \"react\";\nimport { Table } from 'semantic-ui-react'\n\nclass StatTable extends React.Component {\n\n  render() {\n    const { fields, stats } = this.props;\n\n    return (\n      <Table>\n        <Table.Header>\n          <Table.Row>\n            {fields.map(field => <Table.HeaderCell>{field}</Table.HeaderCell>)}\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {stats.map((stat) =>\n            <Table.Row>\n              {Object.entries(stat).map(entry => <Table.Cell>{entry[1].toLocaleString()}</Table.Cell>)}\n            </Table.Row>\n          )}\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n\nexport default StatTable;","import React from \"react\";\nimport Plot from \"react-plotly.js\"\n\nclass Plots extends React.Component {\n  renderPlot(title, days, values, color) {\n    return (\n      <div className=\"plot-container\">\n        <Plot\n          useResizeHandler\n          data={[\n            {\n              x: days,\n              y: values,\n              type: 'scatter',\n              mode: 'lines+points',\n              marker: { color: color || 'red' },\n            },\n          ]}\n          layout={{ title: title, autosize: true }} \n        />\n      </div>\n    ); \n  }\n\n  renderDailyPoints(days) {\n    const { stats } = this.props;\n    return this.renderPlot(\"Daily points\", days, stats.map(entry => entry.points));\n  }\n\n  renderDownloads(days) {\n    const { stats } = this.props;\n\n    return (\n      <div className=\"plot-container\">\n        <Plot\n          useResizeHandler\n          data={[\n            {\n              x: days,\n              y: stats.map(entry => entry.dailyCurseForgeDownload),\n              name: \"Daily CurseForge Download\",\n              type: 'scatter',\n              mode: 'lines+points',\n              marker: { color: 'orange' },\n              stackgroup: 'one'\n            },\n            {\n              x: days,\n              y: stats.map(entry => entry.dailyTwitchAppDownload),\n              name: \"Daily Twitch App Download\",\n              type: 'scatter',\n              mode: 'lines+points',\n              marker: { color: 'purple' },\n              stackgroup: 'one'\n            },\n            {\n              x: days,\n              y: stats.map(entry => entry.dailyUniqueDownload),\n              name: \"Unique downloads\",\n              type: 'scatter',\n              mode: 'lines+points',\n              marker: { color: 'red' },\n            },\n            {\n              x: days,\n              y: stats.map(entry => entry.dailyDownload),\n              name: \"Daily downloads\",\n              type: 'scatter',\n              mode: 'lines+points',\n              marker: { color: 'green' },\n            },\n          ]}\n          layout={{ title: \"Downloads\", autosize: true }} \n        />\n      </div>\n    ); \n  }\n\n  renderHistoricalDownload(days) {\n    const { stats } = this.props;\n    return this.renderPlot(\"Historical Download\", days, stats.map(entry => entry.historicalDownload), \"red\");\n  }\n\n  render() {\n    const { stats } = this.props;\n    const days = stats.map(entry => entry.date);\n\n    return (\n      <div>\n        {this.renderDailyPoints(days)}\n        {this.renderDownloads(days)}\n        {this.renderHistoricalDownload(days)}\n      </div>\n    )\n  }\n}\n\nexport default Plots;","import React from \"react\";\nimport { Statistic, Header, Icon, Popup } from \"semantic-ui-react\";\n\nconst Summary = ({ analytics }) => {\n  const { project, fields, stats, summary } = analytics;\n  const fixedTwo = {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }\n\n  const noDigits = {\n    maximumFractionDigits: 0,\n  }\n\n  const {\n    pointSum,\n    downloadSum,\n    uniqueDownloadSum,\n    cursePercentage,\n    twitchPercentage,\n    curseDownloadSum,\n    twitchDownloadSum,\n    pointDailyAverage,\n    estimatedRevenues,\n    dailyEstimatedRevenues,\n    growth,\n    downloadDailyAverage,\n    uniqueness,\n  } = summary;\n\n  return (\n    <div>\n      <div>\n        <Header as=\"h2\">Points</Header>\n        <Statistic.Group size=\"tiny\">\n          <Statistic>\n            <Statistic.Value>{pointSum.toLocaleString()}</Statistic.Value>\n            <Statistic.Label>Total</Statistic.Label>\n          </Statistic>\n          <Statistic>\n            <Statistic.Value>{pointDailyAverage.toLocaleString(undefined, fixedTwo)}</Statistic.Value>\n            <Statistic.Label>Daily average</Statistic.Label>\n          </Statistic>\n          <Statistic>\n            <Statistic.Value>${estimatedRevenues.toFixed(2)} USD</Statistic.Value>\n            <Statistic.Label>\n              Estimated revenues\n              <Popup\n                trigger={<Icon name=\"question circle\" />}\n                content={\"Calculated on a 1pts to $0.05 USD rate\"}\n              />\n            </Statistic.Label>\n          </Statistic>\n          <Statistic>\n            <Statistic.Value>${dailyEstimatedRevenues.toFixed(2)} USD</Statistic.Value>\n            <Statistic.Label>\n              Daily estimated revenues\n              <Popup\n                trigger={<Icon name=\"question circle\" />}\n                content={\"Calculated on a 1pts to $0.05 USD rate\"}\n              />\n            </Statistic.Label>\n          </Statistic>\n        </Statistic.Group>\n      </div>\n      <div className=\"mt-1\">\n        <Header as=\"h2\">Downloads</Header>\n        <Statistic.Group size=\"tiny\">\n          <Statistic>\n            <Statistic.Value>{downloadSum.toLocaleString()}</Statistic.Value>\n            <Statistic.Label>\n              <Icon name=\"download\" />\n              Total\n            </Statistic.Label>\n          </Statistic>\n          <Statistic>\n            <Statistic.Value>{downloadDailyAverage.toLocaleString(undefined, noDigits)}</Statistic.Value>\n            <Statistic.Label>Daily average</Statistic.Label>\n          </Statistic>\n          <Statistic>\n            <Statistic.Value>{uniqueDownloadSum.toLocaleString()}</Statistic.Value>\n            <Statistic.Label>Total unique</Statistic.Label>\n          </Statistic>\n          <Statistic>\n            <Statistic.Value>{uniqueness.toFixed(1)}%</Statistic.Value>\n            <Statistic.Label>Uniqueness</Statistic.Label>\n          </Statistic>\n          <Statistic>\n            <Statistic.Value>{growth.toFixed(1)}%</Statistic.Value>\n            <Statistic.Label>\n              <Icon name=\"rocket\"/>\n              Growth\n            </Statistic.Label>\n          </Statistic>\n        </Statistic.Group>\n        <Statistic.Group size=\"tiny\">\n          <Statistic color=\"purple\">\n            <Statistic.Value>{twitchPercentage.toFixed(1)}%</Statistic.Value>\n            <Statistic.Label>from Twitch App<Icon name=\"twitch\"/></Statistic.Label>\n          </Statistic>\n          <Statistic color=\"orange\">\n            <Statistic.Value>{cursePercentage.toFixed(1)}%</Statistic.Value>\n            <Statistic.Label>from Curse<Icon name=\"fire\"/></Statistic.Label>\n          </Statistic>\n        </Statistic.Group>\n      </div>\n    </div>\n  );\n};\n\nexport default Summary;","import React, { Component } from \"react\";\nimport ImportCSV from \"./components/ImportCSV\";\nimport parseAnalytics from \"./utils/parseAnalytics\";\nimport NavBar from \"./components/NavBar\";\nimport StatTable from \"./components/stats/StatTable\";\nimport Plots from \"./components/stats/Plots\";\nimport { Header, Icon, Container, Divider } from \"semantic-ui-react\";\nimport Summary from \"./components/stats/Summary\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      analytics: null,\n    }\n\n    this.handleAnalytics = this.handleAnalytics.bind(this);\n  }\n\n  handleAnalytics(data) {\n    this.setState({\n      analytics: parseAnalytics(data.data),\n    })\n  }\n\n  renderAnalytics() {\n    const { project, fields, stats } = this.state.analytics;\n    const range = {\n      start: stats[0].date,\n      end: stats[stats.length - 1].date,\n    }\n    return (\n      <div style={{ marginLeft: \"1rem\", marginRight: \"1rem\"}}>\n        <Header as=\"h2\">\n          <Icon name=\"chart line\"/>\n          <Header.Content>\n            {project.name}\n            <Header.Subheader>Id. {project.id}</Header.Subheader>\n          </Header.Content>\n        </Header>\n        <Header as=\"h3\">\n          <Icon name=\"calendar alternate outline\"/>\n          {range.start} to {range.end} ({stats.length - 1} days)\n        </Header>\n        <Divider />\n        <Summary analytics={this.state.analytics} />\n        <Plots fields={fields} stats={stats}/>\n        <Header as=\"h2\"><Icon name=\"database\" />Raw data</Header>\n        <StatTable fields={fields} stats={stats}/>\n      </div>\n    )\n  }\n\n  render() {\n    const { analytics } = this.state;\n\n    return (\n      <div>\n        <NavBar />\n        <Container textAlign=\"center\">\n          <ImportCSV\n            onData={this.handleAnalytics}\n          />\n          <b>Note:</b> your file is <strong>NOT</strong> uploaded to any server.\n        </Container>\n        {analytics && this.renderAnalytics()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}